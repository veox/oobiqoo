;;;; ==========================================================================
;;;; @title oo
;;;; @notice Base mintable token storage/dispatcher.
;;;; @author Noel Maersk <veox>

(seq
  (import "common.lll")

  ;;; =========================================================================
  ;;; ABI

  ;; ERC20
  (def '*get-name*         0x06fdde03) ; name()
  (def '*get-symbol*       0x95d89b41) ; symbol()
  (def '*get-decimals*     0x313ce567) ; decimals()
  (def '*get-total-supply* 0x18160ddd) ; totalSupply()
  (def '*get-balance-of*   0x70a08231) ; balanceOf(address)
  (def '*transfer*         0xa9059cbb) ; transfer(address,uint256)
  (def '*transfer-from*    0x23b872dd) ; transferFrom(address,address,uint256)
  (def '*approve*          0x095ea7b3) ; approve(address,uint256)
  (def '*get-allowance*    0xdd62ed3e) ; allowance(address,address)
  ;; oobiqoo
  (def '*mint-allowance*   0xdeadbeef) ; mintAllowance()
  (def '*mint*             0xdeadbeef) ; mint()
  (def '*mint-to*          0xdeadbeef) ; mint(address,uint256)
  (def '*transfer-other*   0xdeadbeef) ; transferOther(address,address,uint256)
  (def '*approve-timed*    0xdeadbeef) ; approveTimed(address,uint256,uint256)
  (def '*set-approve-for*  0xdeadbeef) ; setApprovalDuration(uint256)

  ;;; =========================================================================
  ;;; INIT

  (seq
    unpayable

  ;;; =========================================================================
  ;;; RUNTIME

  (returnlll
   (seq
     unpayable
     mstore-function-selector

     ;; TODO: dispatcher

     ;; fallback
     (panic))))
